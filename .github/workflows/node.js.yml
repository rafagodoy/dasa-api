# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        node-version: [12.13.1]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: create env file
      run: |
        touch .env
        echo NODE_ENV =${{ secrets.NODE_ENV }} >> .env
        echo CRYPTO_SECRET =${{ secrets.CRYPTO_SECRET }} >> .env
        echo DATABASE_URL =${{ secrets.DATABASE_URL }} >> .env
        echo JWT_SECRET =${{ secrets.JWT_SECRET }} >> .env
        echo NODE_SERVER =${{ secrets.NODE_SERVER }} >> .env
        echo POSTGRES_DATABASE =${{ secrets.POSTGRES_DATABASE }} >> .env
        echo POSTGRES_DIALECT =${{ secrets.POSTGRES_DIALECT }} >> .env
        echo POSTGRES_PASSWORD =${{ secrets.POSTGRES_PASSWORD }} >> .env
        echo POSTGRES_SERVER =${{ secrets.POSTGRES_SERVER }} >> .env
        echo POSTGRES_USER =${{ secrets.POSTGRES_USER }} >> .env
    - run: npm install
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  release:
      needs: build
      name: Release
      runs-on: ubuntu-18.04
      steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Setup Node.js
          uses: actions/setup-node@v1
          with:
            node-version: '12.x'
        - name: Release
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
            NODE_SERVER: ${{ secrets.NODE_SERVER }}
          run: npx semantic-release
